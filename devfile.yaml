schemaVersion: 2.2.0
metadata:
  name: routeros_script_devspace2
components:
  - name: tooling-image
    image: 
      imageName: ansible-python-creator:latest
      dockerfile:
        uri: docker/Dockerfile
        args: ['tail', '-f', '/dev/null']
        buildContext: .
        rootRequired: true
  - name: tooling-container
    container:
      image: ansible-python-creator:latest
      memoryRequest: 384M
      memoryLimit: 8Gi
      cpuRequest: 250m
      cpuLimit: 2000m
      args: ['tail', '-f', '/dev/null']
commands:
  - id: oc-install
    exec:
      commandLine: '/usr/local/bin/ansible-playbook ${PROJECT_SOURCE}/etc/install_oc.yml'
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true
      component: tooling-container
  - id: molecule-test
    exec:
      label: "Molecule: Run Scenario for Backup Role"
      commandLine: 'source $HOME/.bashrc && molecule test'
      workingDir: ${PROJECTS_ROOT}/routeros_script/collections/example/collection/roles/backup_file
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: molecule-verify
    exec:
      label: "Molecule: Validate Backup File Role"
      commandLine: 'source $HOME/.bashrc && molecule verify'
      workingDir: ${PROJECTS_ROOT}/routeros_script/collections/example/collection/roles/backup_file
      group:
        kind: run
        isDefault: true
      component: tooling-container
events:
  postStart:
    - "oc-install"
